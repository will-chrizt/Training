1.Created a workflow to run the builds and tests on self hosted runner.
    go to action

  create self hosted runner
  execute commands provided
  its ready for jobs
   create a yml file in action for workflow

name: test-runner

on:
  push:
    branches: [ main, develop ] # Triggers on push to main or develop branches
  pull_request:
    branches: [ main, develop ] # Triggers on pull requests targeting main or develop

jobs:
  build-and-test:
    runs-on: self-hosted  # here we specify its self-hosted, if more than one runner  use label too eg runs-on: [self-hosted,my-runner]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Action to check out your code

    - name: Set up Node.js
      uses: actions/setup-node@v4 # Action to set up Node.js environment
      with:
        node-version: '20.x' # Specify the Node.js version

    - name: Install dependencies
      run: npm ci # Installs dependencies (npm ci is recommended for CI)

    - name: Run tests
      run: npm test # Runs your project's tests




2.Created a workflow to automate docker image creation and  pushing  it to dockerhub.


name: Docker Image CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*.*.*' # Also trigger on version tags like v1.0.0

env:
  REGISTRY: docker.io # Or docker.io, your-aws-account-id.dkr.ecr.your-region.amazonaws.com

jobs:
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Necessary if pushing to GitHub Packages/GHCR

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Docker Hub (if pushing to Docker Hub)
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set up Docker Buildx # <-- ADD THIS STEP
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image # Your existing build-push-action step
      uses: docker/build-push-action@v6
      with:
        context: . # Or the path to your Dockerfile context
        file: ./Dockerfile # Or the path to your Dockerfile
        push: true
        tags: |
          docker.io/willchrist/py-app:latest
          docker.io/willchrist/py-app:sha-${{ github.sha }}
        cache-from: type=gha # Keep your cache-from settings
        cache-to: type=gha,mode=max # Keep your cache-to settings

        
